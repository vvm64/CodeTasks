package ready;

import java.util.Scanner;

/*
 Треугольник, как учат в школе, это геометрический объект из трёх отрезков соединённых концами. Отрезки образуют "стороны" треугольника, а точки соединения их концов - вершины (и углы). Статья о треугольниках в википедии может дать более подробное объяснение.

Если у нас есть три отрезка с длинами A B C - мы либо можем построить из них треугольник (например из 3 4 5 или 3 4 7 - хотя в последнем случае треугольник вырожденный, с нулевой площадью) - или это оказывается невозможно (например, со сторонами 1 2 4).

Даны несколько троек чисел, представляющих длины отрезков. Требуется ответить, из каких троек можно построить треугольник, а из каких нет.

Входные данные - содержат количество предполагаемых треугольников в первой строке.
Остальные строки содержат по три числа каждая - длины отрезков для сторон предполагаемого треугольника.
Ответ должен содержать 1 или 0 для каждой тройки чисел (1 если треугольник можно построить, иначе 0).

Пример:

data:
2
3 4 5
1 2 4

answer:
1 0

0 0 0 0 0 0 1 0 1 0 1 0 0 0 1 0 1 1 1 1 0 0 0 0 0 1
 */
/**
 *
 * @author vvm решено
 */
public class Triangles {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int numTr = in.nextInt();
        int ab, bc, ca;
        int[] trAr = new int[numTr];
        for (int i = 0; i < numTr; i++) {
            ab = in.nextInt();
            bc = in.nextInt();
            ca = in.nextInt();
            trAr[i] = isTriangle(ab, bc, ca);
        }
        in.close();
        for (int j = 0; j < trAr.length; j++) {
            System.out.print(trAr[j] + " ");
        }

    }

    public static int isTriangle(int a, int b, int c) {
        if ((a + b > c) && (a + c > b) && (b + c > a)) {
            return 1;
        } else {
            return 0;
        }
    }
}
